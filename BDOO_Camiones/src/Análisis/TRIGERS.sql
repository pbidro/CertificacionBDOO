
--------------------------------------------------------------------------------
------------------------------TRIGER UBICACION----------------------------------
CREATE SEQUENCE INDEX_UBICACION
START WITH 2
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER UBICACION_TGG
BEFORE INSERT OR UPDATE ON UBICACION
FOR EACH ROW
BEGIN

  IF INSERTING THEN
    INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'UBICACION', 
    	'INSERTAR', SYSDATE,USER);
  ELSE
  	IF :OLD.ESTADO = 1 AND :NEW.ESTADO = 0 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'UBICACION', 
  		'DESACTIVAR', SYSDATE,USER);

  	ELSIF :OLD.ESTADO = 0 AND :NEW.ESTADO = 1 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'UBICACION', 
  		'REACTIVAR', SYSDATE,USER);

  	ELSE
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'UBICACION', 
  		'ACTUALIZAR', SYSDATE,USER);
  	END IF;
    
  END IF;

SELECT INDEX_UBICACION.NEXTVAL 
INTO :NEW.CODIGO FROM DUAL;
END;
/


--------------------------------------------------------------------------------
------------------------------TRIGGER VIAJE-------------------------------------

CREATE SEQUENCE INDEX_CODIGO
START WITH 2
INCREMENT BY 1;



CREATE OR REPLACE TRIGGER VIAJE_TGG
BEFORE INSERT OR UPDATE ON VIAJE
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'VIAJE', 
    	'INSERTAR', SYSDATE,USER);

SELECT INDEX_CODIGO.NEXTVAL 
INTO :NEW.CODIGO FROM DUAL;

  ELSE
  	IF :OLD.ESTADO = 1 AND :NEW.ESTADO = 0 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'VIAJE', 
  		'DESACTIVAR', SYSDATE,USER);

  	ELSIF :OLD.ESTADO = 0 AND :NEW.ESTADO = 1 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'VIAJE', 
  		'REACTIVAR', SYSDATE,USER);

  	ELSE
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'VIAJE', 
  		'ACTUALIZAR', SYSDATE,USER);
  	END IF;
    
  END IF;


END;
/



--------------------------------------------------------------------------------
--------------------------------TRIGGER CHOFER----------------------------------




CREATE OR REPLACE TRIGGER CHOFER_TGG
  BEFORE INSERT OR UPDATE ON CHOFER
  FOR EACH ROW
BEGIN
  IF INSERTING THEN
    INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CHOFER', 
    	'INSERTAR', SYSDATE,USER);
  ELSE
  	IF :OLD.ESTADO = 1 AND :NEW.ESTADO = 0 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CHOFER', 
  		'DESACTIVAR', SYSDATE,USER);

  	ELSIF :OLD.ESTADO = 0 AND :NEW.ESTADO = 1 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CHOFER', 
  		'REACTIVAR', SYSDATE,USER);

  	ELSE
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CHOFER', 
  		'ACTUALIZAR', SYSDATE,USER);
  	END IF;
    
  END IF;
END;
/




--------------------------------------------------------------------------------
------------------------------TRIGGER CAMION------------------------------------

CREATE OR REPLACE TRIGGER CAMION_TGG
  BEFORE INSERT OR UPDATE ON CAMION
  FOR EACH ROW
BEGIN
  IF INSERTING THEN
    INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CAMION', 
    	'INSERTAR', SYSDATE,USER);
  ELSE
  	IF :OLD.ESTADO = 1 AND :NEW.ESTADO = 0 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CAMION', 
  		'DESACTIVAR', SYSDATE,USER);

  	ELSIF :OLD.ESTADO = 0 AND :NEW.ESTADO = 1 THEN
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CAMION', 
  		'REACTIVAR', SYSDATE,USER);

  	ELSE
  	INSERT INTO LOG (CODIGO,TABLA, ACCION, FECHASISTEMA,USUARIO) VALUES (1,'CAMION', 
  		'ACTUALIZAR', SYSDATE,USER);
  	END IF;
    
  END IF;
END;
/

--------------------------------------------------------------------------------
--------------------------TRIGGER CODIGO LOG------------------------------------

CREATE SEQUENCE INDEX_LOG
START WITH 1
INCREMENT BY 1;


CREATE OR REPLACE TRIGGER LOG_TGG
BEFORE INSERT ON LOG
FOR EACH ROW
BEGIN
SELECT INDEX_LOG.NEXTVAL 
INTO :NEW.CODIGO FROM DUAL;
END;
/


